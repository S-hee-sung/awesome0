plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.oriental'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.google.guava:guava:31.1-jre'
	implementation 'commons-codec:commons-codec:1.9'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
	implementation 'org.codehaus.jackson:jackson-mapper-asl:1.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.8'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.7.8'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.8'
	implementation 'xerces:xercesImpl:2.12.2'
	implementation 'org.projectlombok:lombok:1.18.26'
	implementation 'org.springframework.data:spring-data-jdbc:2.4.12'
	implementation 'org.springframework.data:spring-data-jpa:2.7.9'
	developmentOnly 'org.springframework.boot:spring-boot-devtools:2.7.8'
	runtimeOnly 'com.h2database:h2:2.1.214'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.8'
//	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'

}

tasks.named('test') {
	useJUnitPlatform()
}
def frontendDir = "$projectDir/src/main/awesome"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install' }
	else {
		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}

